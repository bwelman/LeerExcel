<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept id="array_sortby" xml:lang="nl-NL">
    <title>SORTEREN.OP</title>
    <shortdesc>Sorteer een bereik/matrix op een ander bereik/matrix.</shortdesc>
    <prolog>
        <critdates>
            <created date="2020-08-31"/>
            <revised modified="2020-09-26"/>
        </critdates>
        <metadata>
            <keywords>
                <indexterm>SORTEREN</indexterm>
                <indexterm>SORTEREN.OP</indexterm>
                <indexterm>SORT</indexterm>
                <indexterm>SORTBY</indexterm>
            </keywords>
        </metadata>
    </prolog>
    <conbody>
        <p>Engelstalige functienaam: <term>SORTBY</term></p>
        <p>Sorteert de waarden uit een bereik/matrix op basis van andere waarden.</p>
        <section>
            <title>Syntax</title>
            <codeblock>SORTEREN.OP(matrix;op_matrix1;[sorteervolgorde]; ...)</codeblock>
            <ul>
                <li>matrix: de matrix met waarden</li>
                <li>op_matrix: de matrix waarop sortering gebaseerd moet worden</li>
                <li>sorteervolgorde: 1= oplopend (default), -1 = aflopend</li>
            </ul>
        </section>
        <example>
            <title>Voorbeeld</title>
            <p>Namen sorteren op basis van lengte.</p>
            <fig><image keyref="Array_Dyn_Sortby1"/></fig>
            <p>Zoals je ziet hoeft de reeks waarop de sortering berust niet in de uitvoer voor te
                komen.</p>
            <p>Een andere toepassing van deze functie is bij het sorteren op twee kolommen. In het
                volgende voorbeeld wordt eerst oplopen gesorteerd op basis van geslacht en
                vervolgens aflopend op basis van lengte.</p>
            <p>Sorteren op twee kolommen.</p>
            <fig><image keyref="Array_Dyn_Sortby2"/></fig>
        </example>
    </conbody>
</concept>
