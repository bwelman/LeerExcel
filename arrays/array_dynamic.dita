<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept id="xls_array_dynamic" xml:lang="nl-NL">
    <title>Dynamische matrixformules</title>
    <shortdesc/>
    <prolog>
        <critdates>
            <created date="2020-08-31"/>
            <revised modified="2020-08-31"/>
        </critdates>
        <metadata>
            <keywords>
                <indexterm>Matrix</indexterm>
                <indexterm>Array</indexterm>
                <indexterm>Dynamisch</indexterm>
            </keywords>
        </metadata>
    </prolog>
    <conbody>
        <p>Een matrixformule die in één cel op het werkblad wordt ingevoerd kan resultaten in
            meerdere cellen op het werkblad plaatsen. Dit gedrag wordt <term>overlopen</term>
            (Engels: <term>spilling</term>) genoemd en de resultaten verschijnen in een
                <term>overloopgebied</term> (<term>spill-range</term>). Welke en hoeveel cellen
            gebruikt worden hangt van het resultaat van de formule af. Als de broninhoud van de
            formule verandert worden de resultaten dynamisch bijgewerkt en kan het zijn dat het
            overloopgebied groeit of krimpt. Je krijgt een
            <systemoutput>#OVERLOOP!</systemoutput>fout wanneer het overlopen geblokkeerd wordt door
            andere gegevens in de cellen.</p>
        <note type="important">Dynamische matrixformules zijn alleen in Excel365 beschikbaar!</note>
        <p><b>Verwijzing overloopgebied</b></p>
        <p>Om een verwijzing naar een overloopgebied te maken zet je een hash symbool
                <codeph>#</codeph> achter het adres van de eerste cel van het overloopgebied. Is
            bijvoorbeeld het overloopgebied J2:N4, dan verwijs he hiernaar met
            <codeph>=J2#</codeph>.</p>
        <p>Je kunt deze verwijzing ook in een formule opnemen. Zo geeft bijvoorbeeld
                <codeph>=AANTAL(J2#)</codeph> als antwoord 15, het aantal cellen in dit gebied.
            Wanneer later de grootte van het overloopgebied verandert, dan verandert ook het
            resultaat van de formule.</p>
        <p><b>Naamgeving</b></p>
        <p>Wanneer je met matrices gaat rekenen, is het erg handig om deze van een naam te voorzien.
            Dat kan op dezelfde manier als het toekennen van een naam aan een cel.</p>
        <p><b>Nieuwe dynamische matrixformules</b></p>
        <p>Om het gedrag van dynamische matrices te ondersteunen zijn er een aantal nieuwe
            dynamische matrixformules uitgebracht welke hierna kort toegelicht worden. Tussen
            haakjes staat de Engelstalige functienaam.</p>
        <!--Zeer nuttige site met voorbeelden: https://exceljet.net/glossary/dynamic-array -->
        <section>
            <title>ASELECT.MATRIX (RANDARRAY)</title>
            <p>Retourneert een matrix met willekeurige getallen. Alle argumenten zijn optioneel.</p>
            <p>Syntax: <codeph>ASELECT.MATRIX([rijen] ; [kolommen] ; [min] ; [max] ;
                    [geheel])</codeph></p>
            <ul>
                <li>rijen = het aantal rijen dat geretourneerd moet worden (default=1)</li>
                <li>kolommen = het aantal kolommen dat moet worden (default=1)</li>
                <li>min = de ondergrens van de willekeurige getallen (default=0)</li>
                <li>max = de bovengrens van de willekeurige getallen (default=1)</li>
                <li>geheel = WAAR voor gehele getallen, ONWAAR voor decimale getallen (default)</li>
            </ul>
            <p>Voorbeeld: <codeph>=ASELECT.MATRIX(3;4;10;50;WAAR)</codeph></p>
            <fig><image keyref="Array_Dyn_Randarray"/></fig>
        </section>
        <section>
            <title>FILTER (FILTER)</title>
            <p>Retourneert de gefilterde waarden uit een bereik/matrix.</p>
            <p>Syntax: <codeph>FILTER(matrix ; opnemen ; [als_leeg])</codeph></p>
            <ul>
                <li>matrix: de matrix met waarden</li>
                <li>opnemen: matrix met logische waarden voor de voorwaarden</li>
                <li>als_leeg: te retourneren waarde wanneer er geen resultaten zijn</li>
            </ul>
            <p>Voorbeeld:</p>
            <fig><image keyref="Array_Dyn_Filter"/></fig>
            <p>Vervang in de formule de "v" eens door "m" of door "z".</p>
            <p>Je kunt ook meerdere criteria toevoegen. Om te filteren op vrouwen met een lengte
                kleiner dan 170 wijzig je de formule in
                    <codeph>=FILTER(A32:C41;(B32:B41="v")*(C32:C41&lt;170);"Geen")</codeph></p>
        </section>
        <section>
            <title>REEKS (SEQUENCE)</title>
            <p>Retourneert een reeks getallen volgens een patroon.</p>
            <p>Syntax: <codeph>REEKS(rijen ; [kolommen] ; [beginnen] ; [stap])</codeph></p>
            <ul>
                <li>rijen = het aantal rijen dat geretourneerd moet worden</li>
                <li>kolommen = het aantal kolommen dat geretourneerd moet worden (default=1)</li>
                <li>beginnen = het eerste getal (default=1)</li>
                <li>stap = de stapgrootte (default=1)</li>
            </ul>
            <p>Voorbeeld: <codeph>=REEKS(4;3;5;10)</codeph></p>
            <fig><image keyref="Array_Dyn_Sequence"/></fig>
        </section>
        <section>
            <title>SORTEREN (SORT)</title>
            <p>Sorteert de waarden uit een bereik/matrix.</p>
            <p>Syntax: <codeph>SORTEREN(matrix ; [sorteerindex] ; [sorteervolgorde] ;
                    [op_kol])</codeph></p>
            <ul>
                <li>matrix: de matrix met waarden</li>
                <li>sorteerindex: kolomindex waarop gesorteerd moet worden (default=1)</li>
                <li>sorteervolgorde: 1= oplopend (default), -1 = aflopend</li>
                <li>op_kol: WAAR=sorteer kolommen, ONWAAR=sorteer rijen (default)</li>
            </ul>
            <p>Voorbeeld: sorteren op lengte</p>
            <fig><image keyref="Array_Dyn_Sort"/></fig>
        </section>
        <section>
            <title>SORTEREN.OP (SORTBY)</title>
            <p>Sorteert de waarden uit een bereik/matrix op basis van andere waarden.</p>
            <p>Syntax: <codeph>SORTEREN.OP(matrix ; op_matrix1; [sorteervolgorde], ...)</codeph></p>
            <ul>
                <li>matrix: de matrix met waarden</li>
                <li>op_matrix: de matrix waarop sortering gebaseerd moet worden</li>
                <li>sorteervolgorde: 1= oplopend (default), -1 = aflopend</li>
            </ul>
            <p>Voorbeeld: namen sorteren op basis van lengte</p>
            <fig><image keyref="Array_Dyn_Sortby1"/></fig>
            <p>Zoals je ziet hoeft de reeks waarop de sorterering berust niet in de uitvoer voor te
                komen.</p>
            <p>Een andere toepassing van deze functie is bij het sorteren op twee kolommen. In het
                volgende voorbeeld wordt eerst oplopen gesorteerd op basis van geslacht en
                vervolgens aflopend op basis van lengte.</p>
            <p>Voorbeeld: sorteren op twee kolommen</p>
            <fig><image keyref="Array_Dyn_Sortby2"/></fig>
        </section>
        <section>
            <title>UNIEK (UNIQUE)</title>
            <p>Retourneert een matrix met de unieke waarden uit een bereik/matrix.</p>
            <p>Syntax: <codeph>UNIEK(matrix ; [per_kolom] ; [exact_eenmaal])</codeph></p>
            <ul>
                <li>matrix: de matrix met waarden</li>
                <li>per_kolom: WAAR (vergelijking van kolommen, ONWAAR (vergelijking van rijen,
                    default)</li>
                <li>exact_eenmaal: WAAR (retourneert de unieke waarden die precies één keer
                    voorkomen), ONWAAR (retourneert alle unieke waarden, default)</li>
            </ul>
            <p>Voorbeeld:</p>
            <fig><image keyref="Array_Dyn_Unique"/></fig>
        </section>
        <section>
            <title>X.VERGELIJKEN (XMATCH)</title>
            <p>De functie voert een zoekactie uit en retourneert een positie in verticale of
                horizontale bereiken. Het is een moderne en uitgebreidere opvolger van de functie
                VERGELIJKEN. X.VERGELIJKEN ondersteunt benaderende en exacte overeenkomsten,
                omgekeerd zoeken en jokertekens (*?) voor gedeeltelijke overeenkomsten. Het opzoeken
                van de gegevens kan beginnen bij de eerste waarde of bij de laatste waarde
                (omgekeerd zoeken). Daarnaast kunnen ook binaire zoekopdrachten uitgevoerd
                worden.</p>
            <p>Syntax: <codeph>X.VERGELIJKEN(zoekwaarde ; zoeken-matrix ; [overeenkomstmodus] ;
                    [zoekmodus])</codeph></p>
            <ul>
                <li>zoekwaarde: de op te zoeken waarde</li>
                <li>zoeken-matrix: de matrix waarbinnen gezocht moet worden</li>
                <li>overeenkomstmodus: 0=exacte vergelijking (default), -1=exacte vergelijking of
                    eerst kleinere, 1=exacte vergelijking of eerst grotere, 2=vergelijking met
                    jokers</li>
                <li>zoekmodus: 1=zoeken vanaf eerste (default), -1=vanaf laatste, 2=binair oplopend,
                    -2=binair aflopend</li>
            </ul>
            <p/>
        </section>
        <section>
            <title>X.ZOEKEN (XLOOKUP)</title>
            <p>Deze functie is een moderne en uitgebreidere vervanging van oudere functies als
                VERT.ZOEKEN, HORIZ.ZOEKEN en ZOEKEN. Deze nieuwe functie ondersteunt benaderende en
                exacte overeenkomsten, jokertekens (*?) voor gedeeltelijke overeenkomsten en
                zoekmogelijkheden in verticale en horizontale bereiken.</p>
            <p>Syntax: <codeph>X.ZOEKEN(zoekwaarde ; zoeken-matrix ; matrix-retourneren ;
                    [indien_niet_gevonden], [overeenkomstmodus], [zoekmodus])</codeph></p>
            <ul>
                <li>zoekwaarde: de op te zoeken waarde</li>
                <li>zoeken-matrix: de matrix waarbinnen gezocht moet worden</li>
                <li>matrix-retourneren: de matrix die geretourneerd moet worden</li>
                <li>indien_niet_gevonden: waarde die geretourneerd moet worden wanneer er niets
                    gevonden is</li>
                <li>overeenkomstmodus: 0=exacte vergelijking (default), -1=exacte vergelijking of
                    eerst kleinere, 1=exacte vergelijking of eerst grotere, 2=vergelijking met
                    jokers</li>
                <li>zoekmodus: 1=zoeken vanaf eerste (default), -1=vanaf laatste, 2=binair oplopend,
                    -2=binair aflopend</li>
            </ul>
            <p/>
        </section>
    </conbody>

</concept>
